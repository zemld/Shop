basePath: /
definitions:
  models.Admin:
    properties:
      code:
        type: string
      username:
        type: string
    type: object
  models.IsAdminResponse:
    properties:
      admin_name:
        type: string
      is_admin:
        type: boolean
    type: object
  models.StatusResponse:
    properties:
      message:
        type: string
      user:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: Admin service for managing administrators and items in the storage.
  title: Gateway
  version: "1.0"
paths:
  /v1/admins/auth:
    get:
      description: Checks if user is admin.
      parameters:
      - description: Secret auth code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.IsAdminResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
  /v1/admins/register:
    post:
      description: Registers a new admin.
      parameters:
      - description: Admin which you want to register
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
swagger: "2.0"
