// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/items/add": {
            "post": {
                "description": "Add a new item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item name which you want to add",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Cost of the item",
                        "name": "price",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Amount of the item in stock",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/buy": {
            "post": {
                "description": "Makes item purchase.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item name which you want to buy",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Amount of the item to buy",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemBoughtResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/deliver": {
            "post": {
                "description": "Makes delivery for item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item name which you want to deliver",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Amount of the item to deliver",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemDeliveredResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/remove": {
            "post": {
                "description": "Remove an item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item name which you want to remove",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/update-price": {
            "post": {
                "description": "Change price for item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item name which you want to change price for",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "New price of the item",
                        "name": "price",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemWithNewPriceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Item": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ItemBoughtResponse": {
            "type": "object",
            "properties": {
                "bought": {
                    "type": "integer"
                },
                "item_in_store": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemDeliveredResponse": {
            "type": "object",
            "properties": {
                "delivered": {
                    "type": "integer"
                },
                "item_in_store": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemWithNewPriceResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                },
                "old_price": {
                    "type": "number"
                }
            }
        },
        "models.StatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Item Service",
	Description:      "API for interacting with items in storage.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
