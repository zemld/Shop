basePath: /
definitions:
  models.Admin:
    properties:
      code:
        type: string
      username:
        type: string
    type: object
  models.IsAdminResponse:
    properties:
      admin_name:
        type: string
      is_admin:
        type: boolean
    type: object
  models.Item:
    properties:
      amount:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  models.ItemBoughtResponse:
    properties:
      bought:
        type: integer
      item_in_store:
        $ref: '#/definitions/models.Item'
      message:
        type: string
    type: object
  models.ItemDeliveredResponse:
    properties:
      delivered:
        type: integer
      item_in_store:
        $ref: '#/definitions/models.Item'
      message:
        type: string
    type: object
  models.ItemResponse:
    properties:
      item:
        $ref: '#/definitions/models.Item'
      message:
        type: string
    type: object
  models.ItemWithNewPriceResponse:
    properties:
      item:
        $ref: '#/definitions/models.Item'
      message:
        type: string
      old_price:
        type: number
    type: object
  models.Order:
    properties:
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      user:
        type: string
    type: object
  models.OrderStatusResponse:
    properties:
      message:
        type: string
      order:
        $ref: '#/definitions/models.Order'
      order_id:
        type: integer
    type: object
  models.StatusResponse:
    properties:
      message:
        type: string
      name:
        type: string
    type: object
  models.User:
    properties:
      balance:
        type: number
      name:
        type: string
    type: object
  models.UserRegistered:
    properties:
      is_registered:
        type: boolean
      user:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API gateway for Shop application.
  title: Gateway
  version: "1.0"
paths:
  /v1/admins/auth:
    get:
      description: Checks if user is admin.
      parameters:
      - description: Secret auth code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.IsAdminResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Admins
  /v1/admins/register:
    post:
      description: Registers a new admin.
      parameters:
      - description: Admin which you want to register
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Admin
  /v1/items/add:
    post:
      description: Adds item to store.
      parameters:
      - description: Secret auth code
        in: query
        name: secret
        required: true
        type: string
      - description: Item name which you want to add
        in: query
        name: name
        required: true
        type: string
      - description: Cost of the item
        in: query
        name: price
        required: true
        type: number
      - description: Amount of the item in stock
        in: query
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Items
  /v1/items/buy:
    post:
      description: Makes item purchase.
      parameters:
      - description: Item name which you want to buy
        in: query
        name: name
        required: true
        type: string
      - description: Amount of the item to buy
        in: query
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemBoughtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Items
  /v1/items/deliver:
    post:
      description: Makes delivery for item.
      parameters:
      - description: Secret auth code for admin
        in: query
        name: secret
        required: true
        type: string
      - description: Item name which you want to deliver
        in: query
        name: name
        required: true
        type: string
      - description: Amount of the item to deliver
        in: query
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemDeliveredResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Items
  /v1/items/remove:
    post:
      description: Remove an item.
      parameters:
      - description: Admin secret code for authorization
        in: query
        name: secret
        required: true
        type: string
      - description: Item name which you want to remove
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Items
  /v1/items/update-price:
    post:
      description: Change price for item.
      parameters:
      - description: Admin secret code for authorization
        in: query
        name: secret
        required: true
        type: string
      - description: Item name which you want to change price for
        in: query
        name: name
        required: true
        type: string
      - description: New price of the item
        in: query
        name: price
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemWithNewPriceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Items
  /v1/orders/create-order:
    post:
      description: Create a new order
      parameters:
      - description: User whose balance you want to change
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.OrderStatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.OrderStatusResponse'
      tags:
      - Orders
  /v1/users/{user}:
    get:
      description: Checks if user is registered.
      parameters:
      - description: User which you want to check
        in: path
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRegistered'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Users
  /v1/users/balance:
    get:
      description: Returns user's balance.
      parameters:
      - description: User whose balance you want to get
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Users
  /v1/users/change-balance:
    post:
      description: Changes the balance of a registered user.
      parameters:
      - description: User whose balance you want to change
        in: query
        name: name
        required: true
        type: string
      - description: New balance of the user
        in: query
        name: balance
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Users
  /v1/users/register:
    post:
      description: Registers a new user.
      parameters:
      - description: User which you want to register
        in: query
        name: name
        required: true
        type: string
      - description: Balance of the user
        in: query
        name: balance
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusResponse'
      tags:
      - Users
swagger: "2.0"
