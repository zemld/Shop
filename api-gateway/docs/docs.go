// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admins/auth": {
            "get": {
                "description": "Checks if user is admin.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret auth code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IsAdminResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/admins/register": {
            "post": {
                "description": "Registers a new admin.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin which you want to register",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/add": {
            "post": {
                "description": "Adds item to store.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret auth code",
                        "name": "secret",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item name which you want to add",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Cost of the item",
                        "name": "price",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Amount of the item in stock",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/buy": {
            "post": {
                "description": "Makes item purchase.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item name which you want to buy",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Amount of the item to buy",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemBoughtResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/deliver": {
            "post": {
                "description": "Makes delivery for item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret auth code for admin",
                        "name": "secret",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item name which you want to deliver",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Amount of the item to deliver",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemDeliveredResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/remove": {
            "post": {
                "description": "Remove an item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin secret code for authorization",
                        "name": "secret",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item name which you want to remove",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/items/update-price": {
            "post": {
                "description": "Change price for item.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin secret code for authorization",
                        "name": "secret",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item name which you want to change price for",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "New price of the item",
                        "name": "price",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ItemWithNewPriceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/orders/create-order": {
            "post": {
                "description": "Create a new order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "description": "User whose balance you want to change",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.OrderStatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.OrderStatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/balance": {
            "get": {
                "description": "Returns user's balance.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User whose balance you want to get",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/change-balance": {
            "post": {
                "description": "Changes the balance of a registered user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User whose balance you want to change",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "New balance of the user",
                        "name": "balance",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/register": {
            "post": {
                "description": "Registers a new user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User which you want to register",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Balance of the user",
                        "name": "balance",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{user}": {
            "get": {
                "description": "Checks if user is registered.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User which you want to check",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRegistered"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Admin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.IsAdminResponse": {
            "type": "object",
            "properties": {
                "admin_name": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                }
            }
        },
        "models.Item": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ItemBoughtResponse": {
            "type": "object",
            "properties": {
                "bought": {
                    "type": "integer"
                },
                "item_in_store": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemDeliveredResponse": {
            "type": "object",
            "properties": {
                "delivered": {
                    "type": "integer"
                },
                "item_in_store": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemWithNewPriceResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/models.Item"
                },
                "message": {
                    "type": "string"
                },
                "old_price": {
                    "type": "number"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Item"
                    }
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "models.OrderStatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "order": {
                    "$ref": "#/definitions/models.Order"
                },
                "order_id": {
                    "type": "integer"
                }
            }
        },
        "models.StatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UserRegistered": {
            "type": "object",
            "properties": {
                "is_registered": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Gateway",
	Description:      "API gateway for Shop application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
